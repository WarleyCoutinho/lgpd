{"remainingRequest":"/home/warley/Área de Trabalho/Projeto de TCC/Front-End/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/warley/Área de Trabalho/Projeto de TCC/Front-End/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/warley/Área de Trabalho/Projeto de TCC/Front-End/src/App.vue","mtime":1651663128901},{"path":"/home/warley/Área de Trabalho/Projeto de TCC/Front-End/node_modules/css-loader/dist/cjs.js","mtime":1650512225906},{"path":"/home/warley/Área de Trabalho/Projeto de TCC/Front-End/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1650512226403},{"path":"/home/warley/Área de Trabalho/Projeto de TCC/Front-End/node_modules/postcss-loader/src/index.js","mtime":1650512226337},{"path":"/home/warley/Área de Trabalho/Projeto de TCC/Front-End/node_modules/cache-loader/dist/cjs.js","mtime":1650512209933},{"path":"/home/warley/Área de Trabalho/Projeto de TCC/Front-End/node_modules/vue-loader/lib/index.js","mtime":1650512226403}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKKiB7CiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjsKfQpib2R5IHsKICBtYXJnaW46IDA7Cn0KI2FwcCB7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICBoZWlnaHQ6IDEwMHZoOwogIGRpc3BsYXk6IGdyaWQ7CiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAzMDBweCAxZnI7CiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA2MHB4IDFmciA0MHB4OwogIGdyaWQtdGVtcGxhdGUtYXJlYXM6ICdoZWFkZXIgaGVhZGVyJyAnbWVudSBjb250ZW50JyAnbWVudSBmb290ZXInOwp9CiNhcHAuaGlkZS1tZW51IHsKICBncmlkLXRlbXBsYXRlLWFyZWFzOiAnaGVhZGVyIGhlYWRlcicgJ2NvbnRlbnQgY29udGVudCcgJ2Zvb3RlciBmb290ZXInOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" :class=\"{ 'hide-menu': !isMenuVisible || !user }\">\n    <Header\n      title=\"TCC- Projeto de conclusão de Curso\"\n      :hideToggle=\"!user\"\n      :hideUserDropdown=\"!user\"\n    />\n    <Menu v-if=\"user\" />\n    <Loading v-if=\"validatingToken\" />\n    <Content v-else />\n    <Footer />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { baseApiUrl, userKey } from '@/global';\nimport { mapState } from 'vuex';\nimport Header from '@/components/template/Header';\n// import Menu from '@/components/template/Menu';\nimport Content from '@/components/template/Content';\nimport Footer from '@/components/template/Footer';\nimport Loading from '@/components/template/Loading';\nimport './styles/global.css';\nexport default {\n  name: 'App',\n  components: { Header, Content, Footer, Loading },\n  computed: mapState(['isMenuVisible', 'user']),\n  data: function () {\n    return {\n      validatingToken: true,\n    };\n  },\n  methods: {\n    async validateToken() {\n      this.validatingToken = true;\n      const json = localStorage.getItem(userKey);\n      const userData = JSON.parse(json);\n      this.$store.commit('setUser', null);\n      if (!userData) {\n        this.validatingToken = false;\n        this.$router.push({ name: 'auth' });\n        return;\n      }\n      const res = await axios.post(`${baseApiUrl}/validateToken`, userData);\n      if (res.data) {\n        this.$store.commit('setUser', userData);\n        if (this.$mq === 'xs' || this.$mq === 'sm') {\n          this.$store.commit('toggleMenu', false);\n        }\n      } else {\n        localStorage.removeItem(userKey);\n        this.$router.push({ name: 'auth' });\n      }\n      this.validatingToken = false;\n    },\n  },\n  created() {\n    this.validateToken();\n  },\n};\n</script>\n<style>\n* {\n  font-family: 'Lato', sans-serif;\n}\nbody {\n  margin: 0;\n}\n#app {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 60px 1fr 40px;\n  grid-template-areas: 'header header' 'menu content' 'menu footer';\n}\n#app.hide-menu {\n  grid-template-areas: 'header header' 'content content' 'footer footer';\n}\n</style>\n© 2022 GitHub, Inc. Terms\n"]}]}